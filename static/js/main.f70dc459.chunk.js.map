{"version":3,"sources":["сomponents/Section/SectionStyled.js","сomponents/Section/Section.js","сomponents/FeedbackOptions/ButtonStyled.js","сomponents/FeedbackOptions/FeedbackOptions.js","сomponents/Notification/MessageStyled.js","сomponents/Notification/Notification.js","сomponents/Statistics/ItemStyled.js","сomponents/Statistics/StatisticsStyled.js","сomponents/Statistics/Statistics.js","сomponents/App.js","index.js"],"names":["SectionStyled","styled","section","Section","title","children","className","ButtonStyled","button","FeedbackOptions","options","onLeaveFeedback","map","item","name","onClick","MessageStyled","p","Notification","message","ItemStyled","li","StatisticsStyled","ul","Statistics","good","neutral","bad","total","positivePercentage","App","state","clickHandler","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","i","countPositiveFeedbackPercentage","Math","round","buttonNames","keys","this","positive","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAWeA,EATOC,IAAOC,QAAV,gI,OCcJC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAAC,EAAD,WACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,MCSUE,EAdMN,IAAOO,OAAV,4PCmBHC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,cAAC,EAAD,CAAyBC,KAAMD,EAAME,QAASJ,EAA9C,SACGE,GADgBA,SCFZG,EAJOf,IAAOgB,EAAV,gDCQJC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,cAAC,EAAD,UAAgBA,KCEvCC,EAJInB,IAAOoB,GAAV,oDCQDC,EARUrB,IAAOsB,GAAV,iICePC,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,eAAC,EAAD,WACE,eAAC,EAAD,oBAAmBJ,KACnB,eAAC,EAAD,uBAAsBC,KACtB,eAAC,EAAD,mBAAkBC,KAClB,eAAC,EAAD,qBAAoBC,KACpB,eAAC,EAAD,iCAAgCC,EAAhC,WCsDWC,E,4MA1DbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,aAAe,SAAAC,GACb,IAAMnB,EAAOmB,EAAEC,OAAOpB,KACtB,EAAKqB,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,kBAEGtB,EAAOsB,EAAUtB,GAAQ,Q,EAKhCuB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,I,EAG/DC,gCAAkC,WAChC,IAAMf,EAAQ,EAAKS,qBACnB,OAAiB,IAAVT,EAAc,EAAIgB,KAAKC,MAAO,EAAKd,MAAMN,KAAOG,EAAS,M,4CAGlE,WACE,IAAMkB,EAAcR,OAAOS,KAAKC,KAAKjB,OACrC,EAA+BiB,KAAKjB,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQoB,KAAKX,qBACbY,EAAWD,KAAKL,kCAEtB,OACE,qCACE,cAAC,EAAD,CAASvC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASoC,EACTnC,gBAAiBqC,KAAKhB,iBAG1B,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACGwB,EACC,cAAC,EAAD,CACExB,MAAM,aACNqB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBoB,IAGtB,cAAC,EAAD,CAAc9B,QAAQ,+B,GAnDhB+B,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f70dc459.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst SectionStyled = styled.section`\r\n  margin: 20px;\r\n  padding: 20px;\r\n  .title {\r\n    font-size: 30px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport default SectionStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SectionStyled from './SectionStyled';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <SectionStyled>\r\n    <h2 className=\"title\">{title}</h2>\r\n    {children}\r\n  </SectionStyled>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.button`\r\n  display: inline-block;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: none;\r\n  background-color: #3f51b5;\r\n  color: #fff;\r\n  margin-right: 20px;\r\n  width: 70px;\r\n  padding: 6px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default ButtonStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonStyled from './ButtonStyled';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(item => (\r\n        <ButtonStyled key={item} name={item} onClick={onLeaveFeedback}>\r\n          {item}\r\n        </ButtonStyled>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from 'styled-components';\r\n\r\nconst MessageStyled = styled.p`\r\n  font-size: 26px;\r\n`;\r\n\r\nexport default MessageStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStyled from './MessageStyled';\r\n\r\nconst Notification = ({ message }) => <MessageStyled>{message}</MessageStyled>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import styled from 'styled-components';\r\n\r\nconst ItemStyled = styled.li`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default ItemStyled;\r\n","import styled from 'styled-components';\r\n\r\nconst StatisticsStyled = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  font-size: 20px;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport default StatisticsStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ItemStyled from './ItemStyled';\r\nimport StatisticsStyled from './StatisticsStyled';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <StatisticsStyled>\r\n    <ItemStyled>good: {good}</ItemStyled>\r\n    <ItemStyled>neutral: {neutral}</ItemStyled>\r\n    <ItemStyled>bad: {bad}</ItemStyled>\r\n    <ItemStyled>total: {total}</ItemStyled>\r\n    <ItemStyled>positive feedback: {positivePercentage}%</ItemStyled>\r\n  </StatisticsStyled>\r\n);\r\n\r\nStatistics.propTypes = PropTypes.objectOf(PropTypes.number).isRequired;\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Notification from './Notification/Notification';\nimport Statistics from './Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickHandler = e => {\n    const name = e.target.name;\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, i) => acc + i, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return total === 0 ? 0 : Math.round((this.state.good / total) * 100);\n  };\n\n  render() {\n    const buttonNames = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positive = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={buttonNames}\n            onLeaveFeedback={this.clickHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              title=\"Statistics\"\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positive}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './сomponents/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}