{"version":3,"sources":["components/Statistics.js","components/Section.js","components/FeedbackOptions.js","components/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","item","onClick","Notification","message","App","state","clickHandler","name","setState","prevState","buttonNames","Object","keys","this","values","reduce","acc","i","positive","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVA4BeA,EAzBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIC,UAAU,aAAd,UACE,qBAAIA,UAAU,OAAd,UACE,0CACA,+BAAOL,OAET,qBAAIK,UAAU,OAAd,UACE,6CACA,+BAAOJ,OAET,qBAAII,UAAU,OAAd,UACE,yCACA,+BAAOH,OAET,qBAAIG,UAAU,OAAd,UACE,2CACA,+BAAOF,OAET,qBAAIE,UAAU,OAAd,UACE,uDACA,iCAAOD,EAAP,cCbSE,G,MAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASH,UAAU,UAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBE,IACtBC,OCaUC,G,MAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,wBAEER,UAAU,kBACVS,QAAS,kBAAMH,EAAgBE,IAHjC,SAKGA,GAJIA,UCHAE,G,MAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGX,UAAU,UAAb,SAAwBW,MCoD/CC,E,4MAhDbC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,aAAe,SAAAC,GACb,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,kBAEGF,EAAOE,EAAUF,GAAQ,Q,4CAIhC,WACE,IAAMG,EAAcC,OAAOC,KAAKC,KAAKR,OACrC,EAA+BQ,KAAKR,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQqB,OAAOG,OAAOD,KAAKR,OAAOU,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,GAC9DC,EACM,IAAV5B,EAAc,EAAI6B,KAAKC,MAAOP,KAAKR,MAAMlB,KAAOG,EAAS,KAE3D,OACE,qCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASa,EACTZ,gBAAiBe,KAAKP,iBAG1B,cAAC,EAAD,CAASZ,MAAM,aAAf,SACGJ,EACC,cAAC,EAAD,CACEI,MAAM,aACNP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB2B,IAGtB,cAAC,EAAD,CAAcf,QAAQ,+B,GAzChBkB,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.063854cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Statistics.scss';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className=\"Statistics\">\r\n    <li className=\"item\">\r\n      <span>good: </span>\r\n      <span>{good}</span>\r\n    </li>\r\n    <li className=\"item\">\r\n      <span>neutral: </span>\r\n      <span>{neutral}</span>\r\n    </li>\r\n    <li className=\"item\">\r\n      <span>bad: </span>\r\n      <span>{bad}</span>\r\n    </li>\r\n    <li className=\"item\">\r\n      <span>total: </span>\r\n      <span>{total}</span>\r\n    </li>\r\n    <li className=\"item\">\r\n      <span>positive feedback: </span>\r\n      <span>{positivePercentage}%</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport './Section.scss';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className=\"Section\">\r\n    <h2 className=\"title\">{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport './FeedbackOptions.scss';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(item => (\r\n        <button\r\n          key={item}\r\n          className=\"feedback-button\"\r\n          onClick={() => onLeaveFeedback(item)}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport './Notification.scss';\r\n\r\nconst Notification = ({ message }) => <p className=\"message\">{message}</p>;\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickHandler = name => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n  render() {\n    const buttonNames = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const total = Object.values(this.state).reduce((acc, i) => acc + i, 0);\n    const positive =\n      total === 0 ? 0 : Math.round((this.state.good / total) * 100);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={buttonNames}\n            onLeaveFeedback={this.clickHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              title=\"Statistics\"\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positive}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}