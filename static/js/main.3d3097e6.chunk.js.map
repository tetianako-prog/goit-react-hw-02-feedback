{"version":3,"sources":["сomponents/Section/Section.js","сomponents/FeedbackOptions/FeedbackOptions.js","сomponents/Notification/Notification.js","сomponents/Statistics/Statistics.js","сomponents/App.js","index.js"],"names":["SectionStyled","styled","section","Section","title","children","className","ButtonStyled","button","FeedbackOptions","options","onLeaveFeedback","map","item","onClick","MessageStyled","p","Notification","message","StatisticsStyled","ul","ItemStyled","li","Statistics","good","neutral","bad","total","positivePercentage","App","state","clickHandler","name","setState","prevState","buttonNames","Object","keys","this","values","reduce","acc","i","positive","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAIMA,EAAgBC,IAAOC,QAAV,gIAqBJC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACL,EAAD,WACE,oBAAIM,UAAU,QAAd,SAAuBF,IACtBC,MCZCE,EAAeN,IAAOO,OAAV,4PA+BHC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,cAACN,EAAD,CAAyBO,QAAS,kBAAMH,EAAgBE,IAAxD,SACGA,GADgBA,SClBrBE,EAAgBd,IAAOe,EAAV,gDASJC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,cAACH,EAAD,UAAgBG,KCHhDC,EAAmBlB,IAAOmB,GAAV,iIAQhBC,EAAapB,IAAOqB,GAAV,oDAgBDC,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,eAACT,EAAD,WACE,eAACE,EAAD,oBAAmBG,KACnB,eAACH,EAAD,uBAAsBI,KACtB,eAACJ,EAAD,mBAAkBK,KAClB,eAACL,EAAD,qBAAoBM,KACpB,eAACN,EAAD,iCAAgCO,EAAhC,WCgCWC,E,4MA/CbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,aAAe,SAAAC,GACb,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,kBAEGF,EAAOE,EAAUF,GAAQ,Q,4CAIhC,WACE,IAAMG,EAAcC,OAAOC,KAAKC,KAAKR,OACrC,EAA+BQ,KAAKR,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQS,OAAOG,OAAOD,KAAKR,OAAOU,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,GAC9DC,EAAqB,IAAVhB,EAAc,EAAIiB,KAAKC,MAAOrB,EAAOG,EAAS,KAE/D,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASyB,EACTxB,gBAAiB2B,KAAKP,iBAG1B,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACGuB,EACC,cAAC,EAAD,CACEvB,MAAM,aACNoB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBe,IAGtB,cAAC,EAAD,CAAczB,QAAQ,+B,GAxChB4B,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d3097e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst SectionStyled = styled.section`\r\n  margin: 20px;\r\n  padding: 20px;\r\n  .title {\r\n    font-size: 30px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <SectionStyled>\r\n    <h2 className=\"title\">{title}</h2>\r\n    {children}\r\n  </SectionStyled>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.button`\r\n  display: inline-block;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: none;\r\n  background-color: #3f51b5;\r\n  color: #fff;\r\n  margin-right: 20px;\r\n  width: 70px;\r\n  padding: 6px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(item => (\r\n        <ButtonStyled key={item} onClick={() => onLeaveFeedback(item)}>\r\n          {item}\r\n        </ButtonStyled>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst MessageStyled = styled.p`\r\n  font-size: 26px;\r\n`;\r\nconst Notification = ({ message }) => <MessageStyled>{message}</MessageStyled>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StatisticsStyled = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  font-size: 20px;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst ItemStyled = styled.li`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <StatisticsStyled>\r\n    <ItemStyled>good: {good}</ItemStyled>\r\n    <ItemStyled>neutral: {neutral}</ItemStyled>\r\n    <ItemStyled>bad: {bad}</ItemStyled>\r\n    <ItemStyled>total: {total}</ItemStyled>\r\n    <ItemStyled>positive feedback: {positivePercentage}%</ItemStyled>\r\n  </StatisticsStyled>\r\n);\r\n\r\nStatistics.propTypes = PropTypes.objectOf(PropTypes.number).isRequired;\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Notification from './Notification/Notification';\nimport Statistics from './Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickHandler = name => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n  render() {\n    const buttonNames = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const total = Object.values(this.state).reduce((acc, i) => acc + i, 0);\n    const positive = total === 0 ? 0 : Math.round((good / total) * 100);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={buttonNames}\n            onLeaveFeedback={this.clickHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              title=\"Statistics\"\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positive}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './сomponents/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}